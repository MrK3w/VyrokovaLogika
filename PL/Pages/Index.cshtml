@page
@model IndexModel
@{
    ViewData["Title"] = "PL";
}

<!DOCTYPE html>
<html>
<head>
    <title>My Page</title>
    <link rel="stylesheet" href="https://unpkg.com/treeflex/dist/css/treeflex.css">
    <script src="~/js/vivagraph.js"></script>
    <script src="~/js/DAG.js"></script>
    <link rel="stylesheet" href="~/css/styles.css" />
</head>
<body>
    <div class="text-center">
        <h1 class="display-4">Vyrokova logika</h1>

        <form method="post" asp-action="Index" asp-controller="Home" id="TheForm">
            @Html.DropDownList("formula", Model.listItems, "select formula")
            @Html.TextBox("UserInput", "", new { @maxlength = "64" });

            <input type='submit' class="btn btn-primary" value='Create tree' name='submit' />
            <input type='submit' class="btn btn-primary" value='Create DAG' name='submit' />
        </form>

            @if (Model.DAG)
            {
                <script>
                    var myList = @Html.Raw(Json.Serialize(Model.DAGNodes))
                    var treeConnections = @Html.Raw(Json.Serialize(Model.TreeConnections))
                    makeDAG(myList, treeConnections);
               

                </script>
            <p>@Html.Raw(Model.TautologyDecision)</p>
            }

            @if (!Model.DAG)
            {
            @if (Model.ConvertedTree != null)
            {
                if (!Model.TautologyDecision)
                {
                    <p> This is not tautology!</p>
                    <p>Counterarguments</p>
                    <!-- Define the table structure -->
                    <div class="table-container">

                        <table>
                            <tr>
                                <th>Item</th>
                                <th>Literal</th>
                            </tr>
                            @foreach (var node in Model.distinctNodes)
                            {
                                <tr>
                                    <td>@node.Item1</td>
                                    <td>@node.Item2</td>
                                </tr>
                            }
                        </table>
                    </div>
                }
                else
                {
                    <p> This is tautology!</p>
                }
                <p>@Html.Raw(Model.ConvertedTree)</p>
            }

        }

        @if(!Model.Valid)
        {
            <div class="alert alert-danger" role="alert" id="errorAlert">
                Formula is invalid
            </div>
        }
        
    </div>
</body>
</html>