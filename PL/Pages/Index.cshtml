@page
@model IndexModel
@{
    ViewData["Title"] = "PL";
}

<!DOCTYPE html>
<html>
<head>
    <title>My Page</title>
    <link rel="stylesheet" href="https://unpkg.com/treeflex/dist/css/treeflex.css">
    <script src="~/js/DAG.js"></script>
    <script src="~/js/jquery-1.10.2.min.js"></script>
    <script src="~/js/Exercise.js"></script>
    <script src="~/js/ExerciseDAG.js"></script>
    <script src="https://unpkg.com/vis-network/standalone/umd/vis-network.min.js"></script>
    <link rel="stylesheet" href="~/css/styles.css" />
</head>

<body>

    <div class="container mx-auto">
        <div class="row">
            <div class="col-md-2">
                <div class="square-div">
                    <p>
                       Pro zápis logických spojek použij <br />
                        <ul>
                            <li>Konjunkce: (&amp;, &and;)</li>
                            <li>Disjunkce: (|, &or;)</li>
                            <li>Negace: (-, &not;)</li>
                            <li>Implikace: (&gt;, &rarr;)</li>
                            <li>Ekvivalence: (= , &equiv;)</li>
                    </p>
                </div>
                 <div class="square-div">
                    <p>
                       Mezi jednotlivymi logickymi spojkami použij závorku! Například x ∨ y ∧ z není validní formule. Použij x ∨ (y ∧ z) or (x∧y) ∨ z 
                    </p>
                </div>
                <div class="square-div">
                    <p>
                        Prosím použij jen jednopísmenkové literály. Například abc není validní litáral.
                    </p>
                </div>
                <div class="square-div">
                    <p>
                        Pokud chceme dokázat tautologii nebo kontradikci, tak hledáme formule které obsahují logickou kontradikci.
                        Logická kontradikce je pokud ve stromu narazíme na literál, který by zároveň nabýval hodnoty 0 i 1.
                    </p>
                </div>
            </div>
            <div class="col-md-10">
                <div class="text-center">
                    <h1 class="display-4">Vyrokova logika</h1>
                    <style>
                        .btn-group > input {
                            margin-right: 10px; /* Adjust this value to control the spacing between buttons */
                            margin-left: 10px; /* Adjust this value to control the spacing between buttons */
                            width: 200px; /* Set the width of the buttons */
                            height: 40px; /* Set the height of the buttons */
                        }
                    </style>
                    <form method="post" asp-action="Index" asp-controller="Home" id="TheForm" class="d-flex flex-column">
                        <div class="d-flex">
                            @Html.DropDownList("formula", Model.listItems, new { @class = "form-control custom-font", @style = "height: 66.67%;" })
                            @Html.TextBox("UserInput", "", new { @maxlength = "64", @class = "form-control ml-2 custom-font", @style = "height: 66.67%;" })


                            <div class="btn-toolbar ml-2 flex-fill" role="toolbar" aria-label="Toolbar with button groups">
                                <div class="btn-group flex-fill" role="group" aria-label="First group">
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 mr-1" value='Vytvoř syntaktický strom.' name='submit' asp-page-handler="CreateTree" />
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 " value='Vytvoř DAG.' name='submit' asp-page-handler="CreateDAG" />
                                </div>
                                <div class="btn-group flex-fill" role="group" aria-label="Second group">
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 mr-1" value='Zkontroluj tautologi.' name='submit' asp-page-handler="CheckTautology" />
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 " value='Zkontroluj kontradikci.' name='submit' asp-page-handler="CheckContradiction" />
                                </div>
                                <div class="btn-group flex-fill" role="group" aria-label="Third group">
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 mr-1" value='Vykresli strom.' name='submit' asp-page-handler="DrawTree" />
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 " value='Procvičování.' name='submit' asp-page-handler="Exercise"/>
                                </div>
                                <div class="btn-group flex-fill" role="group" aria-label="Fourth group">
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 mr-1" value='Ověr tautologii v DAGU' name='submit' asp-page-handler="CheckTautologyDAG" />
                                <input type='submit' class="btn btn-primary flex-fill mb-2 " value='Ověr kontradikci v DAGU' name='submit' asp-page-handler="CheckContradictionDAG" />
                            </div>
                                <div class="btn-group flex-fill" role="group" aria-label="Fifth group">
                                <input type='submit' class="btn btn-primary flex-fill mb-2 mr-1" value='Procvičuj v DAGU' name='submit' asp-page-handler="ExerciseDAG" />
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 " value='Přidej formuli pro procvičování' name='submit' asp-page-handler="AddNewFormula" />
                            </div>

                            </div>
                        </div>
                    </form>
                    @if (Model.Valid)
                    {
                        @if (Model.button == IndexModel.ButtonType.DAG)
                        {
                            <div id="mynetwork">
                            </div>
                            <script>
                                var myList = @Html.Raw(Json.Serialize(Model.DAGNodes));
                                var treeConnections = @Html.Raw(Json.Serialize(Model.TreeConnections));
                                makeDAG(myList, treeConnections);

                            </script>
                            <div style="display: flex; justify-content: center;">
                                <div style="background-color: orange; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>Levá strana</div>
                            </div>
                            <div style="display: flex; justify-content: center;">
                                <div style="background-color: blue; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>Pravá strana</div>
                            </div>
                        }
                        @if (Model.button == IndexModel.ButtonType.SyntaxTree)
                        {
                            @if (Model.ConvertedTree != null)
                            {
                                <p>@Html.Raw(Model.ConvertedTree)</p>
                            }
                        }
                        @if (Model.button == IndexModel.ButtonType.CheckTautology)
                        {
                            @if (!Model.IsTautologyOrContradiction)
                            {
                                <p> Toto není tautologie!</p>
                                <p>Protiargumenty</p>
                                
                            }
                            else
                            {
                                <p> Toto je tautologie!</p>
                                <p> Příklad semantické kontradikce ve formuli</p>
                            }
                            <div class="table-container">

                                <table>
                                    <tr>
                                        <th>Hodnota</th>
                                        <th>Literál</th>
                                    </tr>
                                    @foreach (var node in Model.distinctNodes)
                                    {
                                        <tr>
                                            <td>@node.Item1</td>
                                            <td>@node.Item2</td>
                                        </tr>
                                    }
                                </table>
                            </div>
                            <p>@Html.Raw(Model.ConvertedTreeTruth)</p>
                        }
                        @if(Model.button == IndexModel.ButtonType.CheckTautologyDAG)
                            {
                            @if (!Model.IsTautologyOrContradiction)
                            {
                                <p> Toto není tautologie!</p>
                                <p>Protiargumenty</p>
                            }
                            else
                            {
                                <p> Toto je tautologie!</p>
                                <p> Příklady sémantického sporu:</p>
                            }
                            <div class="table-container">

                                <table>
                                    <tr>
                                        <th>Item</th>
                                        <th>Literal</th>
                                    </tr>
                                    @foreach (var node in Model.distinctNodes)
                                    {
                                        <tr>
                                            <td>@node.Item1</td>
                                            <td>@node.Item2</td>
                                        </tr>
                                    }
                                </table>
                            </div>
                            <div id="mynetwork">
                            </div>
                            <script>
                                var myList = @Html.Raw(Json.Serialize(Model.DAGNodes));
                                var treeConnections = @Html.Raw(Json.Serialize(Model.TreeConnections));
                                makeDAG(myList, treeConnections);

                            </script>
                            <div style="display: flex; justify-content: center;">
                                <div style="background-color: orange; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>>Levá strana</div>
                            </div>
                            <div style="display: flex; justify-content: center;">
                                <div style="background-color: blue; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>Pravá strana</div>
                            </div>
                        }
                        @if (Model.button == IndexModel.ButtonType.CheckContradictionDAG)
                        {
                            @if (!Model.IsTautologyOrContradiction)
                            {
                                <p> Toto není kontradikce!</p>
                                <p>Protiargumenty</p>
                            }
                            else
                            {
                                <p> Toto je kontradikce!</p>
                                <p> Příklad sémantického sporu.</p>
                            }
                            <div class="table-container">

                                <table>
                                    <tr>
                                        <th>Item</th>
                                        <th>Literal</th>
                                    </tr>
                                    @foreach (var node in Model.distinctNodes)
                                    {
                                        <tr>
                                            <td>@node.Item1</td>
                                            <td>@node.Item2</td>
                                        </tr>
                                    }
                                </table>
                            </div>

                            <div id="mynetwork">
                            </div>
                            <script>
                                var myList = @Html.Raw(Json.Serialize(Model.DAGNodes));
                                var treeConnections = @Html.Raw(Json.Serialize(Model.TreeConnections));
                                makeDAG(myList, treeConnections);

                            </script>
                            <div style="display: flex; justify-content: center;">
                                <div style="background-color: orange; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>>Levá strana</div>
                            </div>
                            <div style="display: flex; justify-content: center;">
                                <div style="background-color: blue; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>Pravá strana</div>
                            </div>
                        }

                        @if (Model.button == IndexModel.ButtonType.CheckContradiction)
                        {
                            @if (!Model.IsTautologyOrContradiction)
                            {
                                <p> Toto není kontradikce!</p>
                                <p>Protiargumenty</p>
                            }
                            else
                            {
                                <p> Toto je kontradikce!</p>
                                <p> Příklady sémantické kontradikce.</p>
                            }
                            <div class="table-container">

                                <table>
                                    <tr>
                                        <th>Item</th>
                                        <th>Literal</th>
                                    </tr>
                                    @foreach (var node in Model.distinctNodes)
                                    {
                                        <tr>
                                            <td>@node.Item1</td>
                                            <td>@node.Item2</td>
                                        </tr>
                                    }
                                </table>
                            </div>
                            <p>@Html.Raw(Model.ConvertedTreeTruth)</p>


                           
                        }

                        @if (Model.button == IndexModel.ButtonType.Exercise)
                        {
                           
                            <p>Řešená formule je @Model.ExerciseFormula. Dokaž že to je @Model.ExerciseType</p>
                            <p> Abys mohl dokázat že formule je tautologií musíme najít takovou formuli, kde její pravdivostní hodnota je 0 a zároveň zde bude semántická kontradikce.
                                V případě že to tautologie není hledej formuli, bez sémantického sporu.
                                V případě toho že se jedná o kontradikci postupuj obdobně jen musíš nastavit pravdivostní hodnotu formule na 1.
                            </p>
                            <p>@Html.Raw(Model.ConvertedTreeTruth)</p>
                            <p>@Model.ExerciseQuote</p>
                            <form method="post" asp-action="Index" asp-controller="Home" id="TheForm2">
                                <input type='submit' class="btn btn-primary" value='Check formula' id="myButton" name='submit2' asp-page-handler="ExerciseProcess" />
                                <input type="hidden" id="hiddenNumber" name="tree" value="" />
                            </form>
                        }
                        @if (Model.button == IndexModel.ButtonType.Draw)
                        {
                            @if (Model.ConvertedTree != null)
                            {
                                <p>@Html.Raw(Model.ConvertedTree)</p>
                                @Html.Raw(@Model.Arguments)
                            }
                        }
                        @if (Model.button == IndexModel.ButtonType.ExerciseDAG)
                        {
                            <p>Řešená formule je @Model.ExerciseFormula. Dokaž že to je @Model.ExerciseType</p>
                            <p>
                                Abys mohl dokázat že formule je tautologií musíme najít takovou formuli, kde její pravdivostní hodnota je 0 a zároveň zde bude semántická kontradikce.
                                V případě že to tautologie není hledej formuli, bez sémantického sporu.
                                V případě toho že se jedná o kontradikci postupuj obdobně jen musíš nastavit pravdivostní hodnotu formule na 1.
                            </p>
                           
                            <div id="mynetwork">
                            </div>
                            <script>
                                var myList = @Html.Raw(Json.Serialize(Model.DAGNodes));
                                var treeConnections = @Html.Raw(Json.Serialize(Model.TreeConnections));
                                makeDAG(myList, treeConnections, true, @Model.mIssueIndex);
                            </script>
                            <div style="display: flex; justify-content: center;">
                                <div style="background-color: orange; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>Levá strana</div>
                            </div>
                            <div style="display: flex; justify-content: center;">
                                <div style="background-color: blue; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>Pravá strana</div>
                            </div>
                            <form method="post" asp-action="Index" asp-controller="Home" id="TheForm3">
                                <input type='submit' class="btn btn-primary" value='Check formula' id="myButton2" name='submit3' asp-page-handler="ExerciseProcessDAG" />
                                <input type="hidden" id="hiddenNumber2" name="pDAGNodes" value="" />
                                <input type="hidden" id="hiddenNumber3" name="DAGPath" value="" />
                            </form>
                            <div id="exercise-quote">
                                <p>@Model.ExerciseQuote</p>
                            </div>
                        }
                        @if (Model.button == IndexModel.ButtonType.AddNewFormula)
                        {
                            <p> Zde přidej novou formuli pro procvičování. </p>
                            <form method="post" asp-page-handler="AddNewFormulaPost">
                            <div class="form-group mt-4">
                                <div class="row">
                                    <div class="col-md-8">
                                        <div class="input-group">
                                            @Html.TextBox("FormulaInput", "", new { @maxlength = "64", @class = "form-control custom-font"})
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="input-group">
                                            @Html.DropDownList("typeOfExercise", Model.TypesOfExercises, new { @class = "form-control custom-font"})
                                            <div class="input-group-append">
                                                <input type="submit" class="btn btn-primary" value="Add New Formula" name="submit"/>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            </form>
                        }
                    }

                    @if (!Model.Valid)
                    {
                        <div class="alert alert-danger" role="alert" id="errorAlert">
                           Formule není v pořádku nebo nebyla vybrána.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</body>
</html>
