@page
@model IndexModel
@{
    ViewData["Title"] = "PL";
}

<!DOCTYPE html>
<html>
<head>
    <title>My Page</title>
    <link rel="stylesheet" href="https://unpkg.com/treeflex/dist/css/treeflex.css">
    <script src="~/js/DAG.js"></script>
    <script src="~/js/jquery-1.10.2.min.js"></script>
    <script src="~/js/Exercise.js"></script>
    <script src="~/js/ExerciseDAG.js"></script>
    <script src="https://unpkg.com/vis-network/standalone/umd/vis-network.min.js"></script>
    <script src="~/js/TruthDAG.js"></script>
    <link rel="stylesheet" href="~/css/styles.css" />
</head>

<body>

    <div class="container mx-auto">
        <div class="row">
            <div class="col-md-2">
                <div class="square-div">
                    <p>
                       Pro zápis logických spojek použij <br />
                        <ul>
                            <li>Konjunkce: (&amp;, &and;)</li>
                            <li>Disjunkce: (|, &or;)</li>
                            <li>Negace: (-, &not;)</li>
                            <li>Implikace: (&gt;, &rarr;)</li>
                            <li>Ekvivalence: (= , &equiv;)</li>
                            </ul>
                    </p>
                </div>
                <div class="square-div">
                    <p>
                        Pokud chceme dokázat tautologii nebo kontradikci, tak hledáme formule které obsahují semántický spor.
                        Semántický spor je pokud narazíme na část, který by pravdivá evaluace zároveň nabývala hodnoty 0 i 1.
                    </p>
                </div>
                <div class="square-div">
                    <p>
                        Prosím použij jen jednopísmenkové literály. Například abc není validní litáral.
                    </p>
                </div>
            </div>
            <div class="col-md-10">
                <div class="text-center">
                    <h3 class="display-7">Výroková  logika</h3>
                    <style>
                        .btn-group > input {
                            margin-right: 10px; /* Adjust this value to control the spacing between buttons */
                            margin-left: 10px; /* Adjust this value to control the spacing between buttons */
                            width: 200px; /* Set the width of the buttons */
                            height: 40px; /* Set the height of the buttons */
                        }
                    </style>
                    <form method="post" asp-action="Index" asp-controller="Home" id="TheForm" class="d-flex flex-column">
                        <div class="d-flex">
                            @Html.DropDownList("formula", Model.ListItems, new { @class = "form-control custom-font", @style = "height: 66.67%;" })
                            @Html.TextBox("UserInput", Model.YourFormula, new { @maxlength = "64", @class = "form-control ml-2 custom-font", @style = "height: 66.67%;" })


                            <div class="btn-toolbar ml-2 flex-fill" role="toolbar" aria-label="Toolbar with button groups">
                                <div class="btn-group flex-fill" role="group" aria-label="First group">
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 mr-1" value='Vytvoř syntaktický strom' name='submit' asp-page-handler="CreateTree" />
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 " value='Vytvoř DAG' name='submit' asp-page-handler="CreateDAG" />
                                </div>
                                <div class="btn-group flex-fill" role="group" aria-label="Second group">
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 mr-1" value='Zkontroluj tautologii' name='submit' asp-page-handler="CheckTautology" />
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 " value='Zkontroluj kontradikci' name='submit' asp-page-handler="CheckContradiction" />
                                </div>
                                <div class="btn-group flex-fill" role="group" aria-label="Third group">
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 mr-1" value='Vykresli strom' name='submit' asp-page-handler="DrawTree" />
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 " value='Procvičování' name='submit' asp-page-handler="Exercise"/>
                                </div>
                                <div class="btn-group flex-fill" role="group" aria-label="Fourth group">
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 mr-1" value='Ověř tautologii v DAGU' name='submit' asp-page-handler="CheckTautologyDAG" />
                                <input type='submit' class="btn btn-primary flex-fill mb-2 " value='Ověř kontradikci v DAGU' name='submit' asp-page-handler="CheckContradictionDAG" />
                            </div>
                                <div class="btn-group flex-fill" role="group" aria-label="Fifth group">
                                <input type='submit' class="btn btn-primary flex-fill mb-2 mr-1" value='Procvičuj v DAGU' name='submit' asp-page-handler="ExerciseDAG" />
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 " value='Přidej\odeber formuli' name='submit' asp-page-handler="AddNewFormula" />
                            </div>
                                <div class="btn-group flex-fill" role="group" aria-label="Sixth group">
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 mr-1" value='Vykresli strom tautologie' name='submit' asp-page-handler="DrawTreeTautology" />
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 " value='Vykresli strom kontradikce' name='submit' asp-page-handler="DrawTreeContradiction" />
                                </div>
                                <div class="btn-group flex-fill" role="group" aria-label="Sixth group">
                                    <input type='submit' class="btn btn-primary flex-fill mb-2 mr-1" value='Interaktivní vykreslení stromu' name='submit' asp-page-handler="InteractiveTree" />                                </div>
                            </div>
                        </div>
                    </form>
                    @if (Model.Valid)
                    {
                        @if (Model.Button == IndexModel.ButtonType.DAG)
                        {
                            <div id="mynetwork">
                            </div>
                            <script>
                                var myList = @Html.Raw(Json.Serialize(Model.DAGNodes));
                                var treeConnections = @Html.Raw(Json.Serialize(Model.TreeConnections));
                                var i = 0;

                                setInterval(function () {
                                    if (i < treeConnections.length) {
                                        makeDAG(myList, treeConnections, false, -1, i);
                                    }
                                    i++;
                                }, 1750); 
                            </script>
                            <div style="display: flex; justify-content: center;">
                                <div style="background-color: orange; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>Pravá strana</div>
                            </div>
                            <div style="display: flex; justify-content: center;">
                                <div style="background-color: blue; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>Levá strana</div>
                            </div>
                        }
                        @if (Model.Button == IndexModel.ButtonType.InteractiveTree)
                        {
                            <p>Doplněním operátoru vytvoř syntaktický strom.</p> 
                            @if (Model.ConvertedTree != null)
                            {
                                <p>@Html.Raw(Model.ConvertedTree)</p>
                            }
                            @foreach (var step in Model.Steps)
                            {
                                <div class="alert alert-primary" role="alert">
                                    <p>@Html.Raw(step)</p>
                                </div>
                            }
                            <form method="post" asp-action="Index" asp-controller="Home" id="TheForm8">
                                <input type='submit' class="btn btn-primary" value='Zkontroluj' id="myButton3" name='submit2' asp-page-handler="InteractiveTreeProcess" />
                                <input type="hidden" id="hiddenTree" name="tree" value="" />
                                <input type="hidden" id="hiddenOriginalTree" name="originalTree" value=@Model.Formula />
                            </form>
                        }

                        @if (Model.Button == IndexModel.ButtonType.SyntaxTree)
                        {
                            @if (Model.ConvertedTree != null)
                            {
                                <p>@Html.Raw(Model.ConvertedTree)</p>
                            }
                        }
                        @if (Model.Button == IndexModel.ButtonType.CheckTautology)
                        {
                            @if (!Model.IsTautologyOrContradiction)
                            {
                                <p> Toto není tautologie!</p>
                                <p>Protiargumenty</p>
                                
                            }
                            else
                            {
                                <p> Toto je tautologie!</p>
                                <p> Příklad semantické kontradikce ve formuli</p>
                            }
                            <div class="table-container">

                                <table>
                                    <tr>
                                        <th>Hodnota</th>
                                        <th>Literál</th>
                                    </tr>
                                    @foreach (var node in Model.DistinctNodes)
                                    {
                                        <tr>
                                            <td>@node.Item1</td>
                                            <td>@node.Item2</td>
                                        </tr>
                                    }
                                </table>
                            </div>
                            <p>@Html.Raw(Model.ConvertedTreeTruth)</p>
                        }
                        @if(Model.Button == IndexModel.ButtonType.CheckTautologyDAG)
                            {
                            @if (!Model.IsTautologyOrContradiction)
                            {
                                <p> Toto není tautologie!</p>
                                <p>Protiargumenty</p>
                            }
                            else
                            {
                                <p> Toto je tautologie!</p>
                                <p> Příklady sémantického sporu:</p>
                            }
                            <div class="table-container">

                                <table>
                                    <tr>
                                        <th>Item</th>
                                        <th>Literal</th>
                                    </tr>
                                    @foreach (var node in Model.DistinctNodes)
                                    {
                                        <tr>
                                            <td>@node.Item1</td>
                                            <td>@node.Item2</td>
                                        </tr>
                                    }
                                </table>
                            </div>
                            <div id="mynetwork">
                            </div>
                            <script>
                                var myList = @Html.Raw(Json.Serialize(Model.DAGNodes));
                                var treeConnections = @Html.Raw(Json.Serialize(Model.TreeConnections));
                                var i = 0;

                                setInterval(function () {
                                    if (i < treeConnections.length) {
                                        truthDAG(myList, treeConnections, false, -1, i);
                                    }
                                    i++;
                                }, 1750);
                            </script>
                            <div style="display: flex; justify-content: center;">
                                <div style="background-color: orange; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>Pravá strana</div>
                            </div>
                            <div style="display: flex; justify-content: center;">
                                <div style="background-color: blue; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>Levá strana</div>
                            </div>
                        }
                        @if (Model.Button == IndexModel.ButtonType.CheckContradictionDAG)
                        {
                            @if (!Model.IsTautologyOrContradiction)
                            {
                                <p> Toto není kontradikce!</p>
                                <p>Protiargumenty</p>
                            }
                            else
                            {
                                <p> Toto je kontradikce!</p>
                                <p> Příklad sémantického sporu.</p>
                            }
                            <div class="table-container">

                                <table>
                                    <tr>
                                        <th>Item</th>
                                        <th>Literal</th>
                                    </tr>
                                    @foreach (var node in Model.DistinctNodes)
                                    {
                                        <tr>
                                            <td>@node.Item1</td>
                                            <td>@node.Item2</td>
                                        </tr>
                                    }
                                </table>
                            </div>

                            <div id="mynetwork">
                            </div>
                            <script>
                                var myList = @Html.Raw(Json.Serialize(Model.DAGNodes));
                                var treeConnections = @Html.Raw(Json.Serialize(Model.TreeConnections));
                                var i = 0;

                                setInterval(function () {
                                    if (i < treeConnections.length) {
                                        truthDAG(myList, treeConnections, false, 0, i);
                                    }
                                    i++;
                                }, 1750);
                            </script>
                            <div style="display: flex; justify-content: center;">
                                <div style="background-color: orange; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>Pravá strana</div>
                            </div>
                            <div style="display: flex; justify-content: center;">
                                <div style="background-color: blue; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>Levá strana</div>
                            </div>
                        }

                        @if (Model.Button == IndexModel.ButtonType.CheckContradiction)
                        {
                            @if (!Model.IsTautologyOrContradiction)
                            {
                                <p> Toto není kontradikce!</p>
                                <p>Protiargumenty</p>
                            }
                            else
                            {
                                <p> Toto je kontradikce!</p>
                                <p> Příklady sémantické kontradikce.</p>
                            }
                            <div class="table-container">

                                <table>
                                    <tr>
                                        <th>Item</th>
                                        <th>Literal</th>
                                    </tr>
                                    @foreach (var node in Model.DistinctNodes)
                                    {
                                        <tr>
                                            <td>@node.Item1</td>
                                            <td>@node.Item2</td>
                                        </tr>
                                    }
                                </table>
                            </div>
                            <p>@Html.Raw(Model.ConvertedTreeTruth)</p> 
                        }

                        @if (Model.Button == IndexModel.ButtonType.Exercise)
                        {
                           
                            <p>Řešená formule je @Model.ExerciseFormula. Dokaž že to @Model.ExerciseType</p>
                            <p> Abys mohl dokázat že formule je tautologií musíme najít takovou formuli, kde její pravdivostní hodnota je 0 a zároveň zde dojdeme k sémantickému sporu.
                                V případě že to tautologie není hledej formuli, bez sémantického sporu.
                                V případě toho že se jedná o kontradikci postupuj obdobně jen musíš nastavit pravdivostní hodnotu formule na 1.
                                Sémantický spor označ na správném místě pomocí x.
                            </p>
                            <p>@Html.Raw(Model.ConvertedTreeTruth)</p>
                            <p>@Model.ExerciseQuote</p>
                            <form method="post" asp-action="Index" asp-controller="Home" id="TheForm2">
                                <input type='submit' class="btn btn-primary" value='Zkontroluj' id="myButton" name='submit2' asp-page-handler="ExerciseProcess" />
                                <input type='button' class="btn btn-secondary" value='Označ sémantický spor' id='xButton' />
                                <input type="hidden" id="hiddenNumber" name="tree" value="" />
                            </form>
                        }
                        @if (Model.Button == IndexModel.ButtonType.Draw)
                        {
                            @if (Model.ConvertedTree != null)
                            {
                                @if (@Model.Level != 0)
                                {
                                    <p> Krok @Model.Level</p>


                                    <p>@Html.Raw(Model.ConvertedTree)</p>
                                    @Html.Raw(@Model.Arguments)

                                    @foreach (var step in Model.Steps)
                                    {
                                        <div class="alert alert-primary" role="alert">
                                            <p>@Html.Raw(step)</p>
                                        </div>
                                    }
                                    @if (Model.Steps.Count == 0 && Model.Level != 0)
                                    {
                                        <div class="alert alert-primary" role="alert">
                                            <p>Hotovo</p>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p> Formule @Model.Formula</p>
                                }
                                <form method="post" asp-action="Index" asp-controller="Home" id="TheForm5">
                                    <input type="hidden" name="level" value="@Model.Level" />
                                    <input type="hidden" id="MyFormula" name="tree" value="@Model.Formula" />
                                    <input type='submit' class="btn btn-primary" value='Sniž úroveň' name="buttonValue" asp-page-handler="DrawTree" />
                                    <input type='submit' class="btn btn-primary" value='Přidej úroveň' name="buttonValue" asp-page-handler="DrawTree" />
                                </form>
                            }
                        }

                        @if (Model.Button == IndexModel.ButtonType.DrawTautology)
                        {
                            @if (Model.ConvertedTree != null)
                            {
                                <p> Krok @Model.Level</p>
                                <p> Formule @Model.Formula</p>
                                    <p>@Html.Raw(Model.ConvertedTree)</p>
                                    @Html.Raw(@Model.Arguments)

                                    @foreach (var step in Model.Steps)
                                    {
                                        <div class="alert alert-primary" role="alert">
                                            <p>@Html.Raw(step)</p>
                                        </div>
                                    }
                                <form method="post" asp-action="Index" asp-controller="Home" id="TheForm5">
                                    <input type="hidden" name="level" value="@Model.Level" />
                                    <input type="hidden" id="MyFormula" name="tree" value="@Model.Formula" />
                                    <input type='submit' class="btn btn-primary" value='Sniž úroveň' name="buttonValue" asp-page-handler="DrawTreeTautology" />
                                    <input type='submit' class="btn btn-primary" value='Přidej úroveň' name="buttonValue" asp-page-handler="DrawTreeTautology" />
                                </form>
                            }
                        }

                        @if (Model.Button == IndexModel.ButtonType.DrawContradiction)
                        {
                            @if (Model.ConvertedTree != null)
                            {
                                <p> Krok @Model.Level</p>
                                <p> Formule @Model.Formula</p>
                                <p>@Html.Raw(Model.ConvertedTree)</p>
                                @Html.Raw(@Model.Arguments)

                                @foreach (var step in Model.Steps)
                                {
                                    <div class="alert alert-primary" role="alert">
                                        <p>@Html.Raw(step)</p>
                                    </div>
                                }
                                <form method="post" asp-action="Index" asp-controller="Home" id="TheForm5">
                                    <input type="hidden" name="level" value="@Model.Level" />
                                    <input type="hidden" id="MyFormula" name="tree" value="@Model.Formula" />
                                    <input type='submit' class="btn btn-primary" value='Sniž úroveň' name="buttonValue" asp-page-handler="DrawTreeContradiction" />
                                    <input type='submit' class="btn btn-primary" value='Přidej úroveň' name="buttonValue" asp-page-handler="DrawTreeContradiction" />
                                </form>
                            }
                        }

                        @if (Model.Button == IndexModel.ButtonType.ExerciseDAG)
                        {
                            <p>Řešená formule je @Model.ExerciseFormula. Dokaž že to @Model.ExerciseType</p>
                            <p>
                                Abys mohl dokázat že formule je tautologií musíme najít takovou formuli, kde její pravdivostní hodnota je 0 a zároveň zde dojdeme k sémantickému sporu.
                                V případě že to tautologie není hledej formuli, bez sémantického sporu.
                                V případě toho že se jedná o kontradikci postupuj obdobně jen musíš nastavit pravdivostní hodnotu formule na 1.
                            </p>

                            <div id="mynetwork">
                            </div>
                            <script>
                                var myList = @Html.Raw(Json.Serialize(Model.DAGNodes));
                                var treeConnections = @Html.Raw(Json.Serialize(Model.TreeConnections));
                                makeDAG(myList, treeConnections, true, @Model.MIssueIndex);
                            </script>
                            <div style="display: flex; justify-content: center; text-align: center;">
                                <div style="background-color: orange; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>Pravá strana</div>
                            </div>
                            <div style="display: flex; justify-content: center; text-align: center;">
                                <div style="background-color: blue; width: 20px; height: 20px; margin-right: 5px;"></div>
                                <div>Levá strana</div>
                            </div>
                            <form method="post" asp-action="Index" asp-controller="Home" id="TheForm3">
                                <input type='submit' class="btn btn-primary" value='Zkontroluj' id="myButton2" name='submit3' asp-page-handler="ExerciseProcessDAG" />
                                <input type="hidden" id="hiddenNumber2" name="pDAGNodes" value="" />
                                <input type="hidden" id="hiddenNumber3" name="DAGPath" value="" />
                            </form>
                            <div id="exercise-quote">
                                <p>@Model.ExerciseQuote</p>
                            </div>
                        }
                        @if (Model.Button == IndexModel.ButtonType.AddNewFormula)
                        {
                            <p> Zde přidej novou formuli pro procvičování. </p>
                            <form method="post" asp-page-handler="AddNewFormulaPost">
                            <div class="form-group mt-4">
                                <div class="row">
                                    <div class="col-md-8">
                                        <div class="input-group">
                                            @Html.TextBox("FormulaInput", "", new { @maxlength = "64", @class = "form-control custom-font"})
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="input-group">
                                            @Html.DropDownList("typeOfExercise", Model.TypesOfExercises, new { @class = "form-control custom-font"})
                                            <div class="input-group-append">
                                                    <input type="submit" class="btn btn-primary" value="Přidej novou formuli" name="addNewFormulaButton" />
                                            </div>

                                              
                                              
                                        </div>
                                    </div>
                                </div>
                                    <div class="row">
                                        <p> Zde odeber formuli pro procvičování. </p>
                                        <div class="col-md-8">
                                    @Html.DropDownList(
                            "MyFormulas",
                            Model.AllExerciseFormulas.Where(x => x != null),
                            new { @class = "form-control custom-font" }
                            )
                            </div>
                                        <div class="col-md-4">
                                            <div class="input-group-append">
                                                <input type="submit" class="btn btn-primary" value="Odstraň formuli" name="removeFormulaButton" />
                                        </div>
                                        </div>
                            </div>
                            </div>
                            </form>
                        }
                    }

                    @if (!Model.Valid)
                    {
                        <div class="alert alert-danger" role="alert" id="errorAlert">
                            @if (Model.ErrorMessage != null)
                            {
                                @Model.ErrorMessage
                            }
                            else
                            { 
                                <p>Chyba</p>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</body>
</html>
